{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","selectTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","query","searchQuery","filter","filterTodo","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","todoId","useState","users","setUsers","preaperedTodo","find","useEffect","userId","selectedUser","href","email","name","App","setTodos","setTodoId","setSearchQuery","setFilter","preaperedSearchQuery","toLowerCase","visibleTodo","searchingTodo","includes","filteredTodo","swithCase","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0908be93.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number;\n  selectTodo: (value: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  selectTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {selectedTodoId === todo.id\n                ? (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      selectTodo(0);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  </button>\n                )\n                : (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      selectTodo(todo.id);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                )}\n            </td>\n          </tr>\n        ))}\n        {/* <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye-slash\" />\n              </span>\n            </button>\n          </td> */}\n\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  searchQuery: React.Dispatch<React.SetStateAction<string>>;\n  filter: string;\n  filterTodo: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  searchQuery,\n  filter,\n  filterTodo,\n}) => {\n  const reset = () => {\n    searchQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(event) => filterTodo(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => searchQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={reset}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todoId: number;\n  todos: Todo[];\n  selectTodo: (value: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todoId, todos, selectTodo }) => {\n  const [users, setUsers] = useState<User | null>(null);\n\n  const preaperedTodo = todos.find(todo => todo.id === todoId) || null;\n\n  useEffect(() => {\n    getUser(preaperedTodo?.userId || 0)\n      .then((selectedUser) => {\n        return setUsers(selectedUser);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!preaperedTodo || !users ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {preaperedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setUsers(null);\n                selectTodo(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {preaperedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {preaperedTodo.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${users.email}`}>\n                {users.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filter, setFilter] = useState('all');\n\n  useEffect(() => {\n    getTodos()\n      .then(todo => {\n        setTodos(todo);\n      });\n  }, []);\n\n  const preaperedSearchQuery = searchQuery.toLowerCase();\n\n  const visibleTodo = todos.filter(todo => {\n    const searchingTodo = todo.title.toLowerCase()\n      .includes(preaperedSearchQuery);\n\n    const swithCase = (value: string) => {\n      switch (value) {\n        case 'all':\n          return todo;\n\n        case 'active':\n          return todo.completed === true;\n\n        case 'completed':\n          return todo.completed === false;\n        default:\n          break;\n      }\n\n      return value;\n    };\n\n    const filteredTodo = swithCase(filter);\n\n    return searchingTodo && filteredTodo;\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={searchQuery}\n                searchQuery={setSearchQuery}\n                filter={filter}\n                filterTodo={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={visibleTodo}\n                    selectedTodoId={todoId}\n                    selectTodo={(value: number) => {\n                      setTodoId(value);\n                    }}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoId !== 0 && (\n        <TodoModal\n          todoId={todoId}\n          todos={todos}\n          selectTodo={(value: number) => {\n            setTodoId(value);\n          }}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}